{"version":3,"sources":["actions.js","List.js","Search.js","BroadcasterCard.js","App.js","serviceWorker.js","index.js"],"names":["setInitialStreams","streams","type","TOGGLECLIPDISPLAY","SHOWSEARCHRESULT","BACKFROMSEARCH","List","returnToList","props","dispatch","showNext","event","getState","activeStreams","pagination","cursorPos","cursor","fetch","headers","then","response","json","data","showPrev","console","log","this","showList","list","map","current","index","imgUrl","thumbnail_url","replace","key","href","user_name","className","target","src","alt","title","viewer_count","onClick","e","showClips","user_id","renderList","renderClips","clipsList","clips","embed_url","height","width","scrolling","allowfullscreen","renderClipsFunc","Component","defaultProps","connect","state","Search","setSearch","search","value","runSearch","preventDefault","length","game_id","gameName","name","resultStream","resultProfile","setProfileInfo","onSubmit","placeholder","onChange","BroadcasterCard","backFromSearch","showStreamCard","streamInfo","streamDetails","game","profileInfo","display_name","profile_image_url","App","id","setClips","Boolean","window","location","hostname","match","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eed344c8.chunk.js","sourcesContent":["export const TEST = {\r\n\ttype:\"TEST\"\r\n}\r\nexport function setInitialStreams(streams){\r\n\treturn {\r\n\t\ttype: \"SETINITSTREAM\",\r\n\t\tstreams: streams\r\n\t}\r\n}\r\n\r\nexport function getInitialStreams(){\r\n\treturn function(dispatch, getState){\r\n        fetch(\"https://api.twitch.tv/helix/streams\", {\r\n            headers: {\r\n                \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                dispatch(setInitialStreams(data));\r\n            });\t\t\r\n\t}\r\n}\r\n\r\nexport const TOGGLECLIPDISPLAY = {\r\n\ttype: \"TOGGLECLIPDISPLAY\"\r\n}\r\n\r\nexport function showNextThunk(){\r\n\treturn function(dispatch, getState){\r\n\t\tif (typeof getState().activeStreams.pagination !== \"undefined\"){\r\n                   const cursorPos = getState().activeStreams.pagination.cursor;\r\n            fetch(\"https://api.twitch.tv/helix/streams?after=\" + cursorPos, {\r\n                headers: {\r\n                    \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    dispatch(setInitialStreams(data));\r\n                });\r\n\t}else{\r\n            fetch(\"https://api.twitch.tv/helix/streams\", {\r\n                headers: {\r\n                    \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    dispatch(setInitialStreams(data));\r\n                });\r\n\t\t}\r\n\t\t}\r\n}\r\n\r\nexport function showPrevThunk(){\r\n\treturn function(dispatch, getState){\r\nif (typeof getState().activeStreams.pagination !== \"undefined\") {\r\n            const cursorPos = getState().activeStreams.pagination.cursor;\r\n            console.log(getState().activeStreams);\r\n            fetch(\"https://api.twitch.tv/helix/streams?before=\" + cursorPos, {\r\n                headers: {\r\n                    \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    dispatch(setInitialStreams(data));\r\n                });\r\n\t}else{return}\r\n}\r\n}\r\n\r\nexport function setSearchAction(text){\r\n\treturn {\r\n\t\ttype: \"SETSEARCH\",\r\n\t\tsearch: text\r\n\t}\r\n}\r\n\r\nexport function setGameName(name){\r\n\treturn {\r\n\t\ttype: \"GAMENAME\",\r\n\t\tgameName: name\r\n\t}\r\n}\r\n\r\nexport const SHOWSEARCHRESULT = {\r\n\ttype: \"SHOWSEARCHRESULT\"\r\n}\r\n\r\nexport function setResultStream(data){\r\n\treturn {\r\n\t\ttype: \"SETRESULTSTREAM\",\r\n\t\tresultStream: data\r\n\t}\r\n}\r\n\r\nexport function setProfileInfo(data){\r\n\treturn{\r\n\t\ttype: \"SETPROFILEINFO\",\r\n\t\tresultProfile: data\r\n\t}\r\n}\r\n\r\nexport function runSearchThunk(){\r\n\treturn function(dispatch, getState){\r\n        fetch(\r\n            \"https://api.twitch.tv/helix/streams?user_login=\" + getState().search,\r\n            {\r\n                headers: {\r\n                    \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n           .then(response => {\r\n                if (response.data.length !== 0) {\r\n                    //stream online\r\n                    fetch(\r\n                        \"https://api.twitch.tv/helix/games?id=\" +\r\n                            response.data[0].game_id,\r\n                        {\r\n                            headers: {\r\n                                \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\r\n                            }\r\n                        }\r\n                    )\r\n                        .then(response => response.json())\r\n                        .then(response => {\r\n                            if (response.data.length) {\r\n                                dispatch(setGameName(response.data[0].name));\r\n                            }\r\n                        });\r\n                    \r\n                    \tdispatch(SHOWSEARCHRESULT);\r\n                    \tdispatch(setResultStream(response.data));\r\n                } else {\r\n                    //stream offline, get profile instead\r\n                    fetch(\r\n                        \"https://api.twitch.tv/helix/users?login=\" + getState().search,\r\n                        {\r\n                            headers: {\r\n                                \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\r\n                            }\r\n                        }\r\n                    )\r\n                        .then(response => response.json())\r\n                        .then(response => {\r\n                            dispatch(setProfileInfo(response.data));\r\n                        });\r\n                }\r\n            });\r\n\t}\r\n}\r\n\r\nexport const BACKFROMSEARCH = {\r\n\ttype: \"BACKFROMSEARCH\"\r\n}\r\n\r\nexport function setClips(data){\r\n\treturn {\r\n\t\ttype: \"SETCLIPS\",\r\n\t\tclips: data\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {TOGGLECLIPDISPLAY, showNextThunk, showPrevThunk} from \"./actions\";\r\n\r\nclass List extends Component {\r\nconstructor(){\r\n    super();\r\n}\r\n    returnToList = () => {\r\n        this.props.dispatch(TOGGLECLIPDISPLAY);\r\n    };\r\n\r\n    showNext = event => {\r\n        this.props.dispatch(showNextThunk());\r\n    };\r\n\r\n    showPrev = event => {\r\n       this.props.dispatch(showPrevThunk()) \r\n    };\r\n\r\n    render(){\r\n    const renderList = () => {\r\n        var list = [];\r\n\r\n        list = this.props.list.map((current, index) => {\r\n            var imgUrl = current.thumbnail_url;\r\n            imgUrl = imgUrl.replace(\"{width}\", \"480\");\r\n            imgUrl = imgUrl.replace(\"{height}\", \"270\");\r\n\r\n            return (\r\n                <li key={index}>\r\n                    <a\r\n                        href={\"https://www.twitch.tv/\" + current.user_name}\r\n                        className=\"stream-link\"\r\n                        target=\"blank\"\r\n                    >\r\n                        <img src={imgUrl} alt=\"thumbnail\" />\r\n                    </a>\r\n                    <p className=\"title\">{current.title}</p>\r\n                    <p>{current.user_name}</p>\r\n                    <p>{current.viewer_count} viewers</p>\r\n                    <button\r\n                        className=\"nav-button\"\r\n                        onClick={e => {\r\n                            this.props.showClips(current.user_id);\r\n                        }}\r\n                    >\r\n                        Top clips\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <button className=\"nav-button marg1\" onClick={this.showPrev}>\r\n                    Previous\r\n                </button>\r\n                <button className=\"nav-button marg1\" onClick={this.showNext}>\r\n                    Next\r\n                </button>\r\n                <ul className=\"streams-list\">{list}</ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderClipsFunc = () => {\r\n        const clipsList = this.props.clips.data.map((current, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <iframe\r\n                        src={current.embed_url + \"&autoplay=false\"}\r\n                        height=\"270\"\r\n                        width=\"480\"\r\n                        scrolling=\"no\"\r\n                        allowfullscreen=\"true\"\r\n                    ></iframe>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <button className=\"nav-button\" onClick={this.returnToList}>\r\n                    Back\r\n                </button>\r\n                <ul className=\"clips-list\">{clipsList} </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (this.props.showList) {\r\n        return renderList();\r\n    } else if (this.props.renderClips) {\r\n        //clips\r\n        return renderClipsFunc();\r\n    } else {\r\n        return null;\r\n    }\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    list: PropTypes.array,\r\n    showClips: PropTypes.func,\r\n    showList: PropTypes.bool,\r\n    renderClips: PropTypes.bool\r\n};\r\n\r\nList.defaultProps = {\r\n    list: []\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    showList: state.showList,\r\n    renderClips: state.renderClips,\r\n    list: state.activeStreams.data,\r\n    clips: state.clips\r\n})\r\n\r\nexport default connect(mapStateToProps)(List);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSearchAction, runSearchThunk } from \"./actions\";\r\n\r\nclass Search extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tsetSearch = event => {\r\n\t\tthis.props.dispatch(setSearchAction(event.target.value));\r\n\t};\r\n\r\n\trunSearch = event => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.dispatch(runSearchThunk());\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.runSearch} className=\"search-form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\tonChange={this.setSearch}\r\n\t\t\t\t\tvalue={this.props.search}\r\n\t\t\t\t\tclassName=\"search-field\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsearch: state.search\r\n});\r\nexport default connect(mapStateToProps)(Search);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {BACKFROMSEARCH} from \"./actions\";\r\n\r\nclass BroadcasterCard extends Component {\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n  backFromSearch = event => {\r\n      this.props.dispatch(BACKFROMSEARCH);\r\n  };\r\n\r\nrender(){\r\nif (this.props.showStreamCard == false) {\r\n    return null;\r\n  } else if (this.props.streamInfo.length !== 0) {\r\n    //stream online\r\n    const streamDetails = this.props.streamInfo[0];\r\n    var imgUrl = streamDetails.thumbnail_url;\r\n    imgUrl = imgUrl.replace(\"{width}\", \"640\");\r\n    imgUrl = imgUrl.replace(\"{height}\", \"360\");\r\n    return (\r\n      <div className=\"result-stream\">\r\n        <button onClick={this.backFromSearch} className=\"nav-button\">\r\n          Back\r\n        </button>\r\n        <p className=\"nomt\">{streamDetails.user_name}</p>\r\n        <a\r\n          href={\"https://www.twitch.tv/\" + streamDetails.user_name}\r\n          target=\"blank\"\r\n          className=\"result-stream-link\"\r\n        >\r\n          <img src={imgUrl} alt=\"thumbnail\" />\r\n        </a>\r\n        <p>Category: {this.props.game}</p>\r\n        <p className=\"title\">{streamDetails.title}</p>\r\n        <p>{streamDetails.viewer_count} viewers</p>\r\n      </div>\r\n    );\r\n  } else if (this.props.profileInfo.length !== 0) {\r\n    return (\r\n      <div className=\"result-profile\">\r\n        <button onClick={this.backFromSearch} className=\"nav-button\">\r\n          Back\r\n        </button>\r\n        <a\r\n          href={\"https://www.twitch.tv/\" + this.props.profileInfo[0].display_name}\r\n          target=\"blank\"\r\n        >\r\n          <img src={this.props.profileInfo[0].profile_image_url} alt=\"profile-pic\" />\r\n          <p>{this.props.profileInfo[0].display_name}</p>\r\n        </a>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <button onClick={this.backFromSearch} className=\"nav-button\">\r\n          Back\r\n        </button>\r\n        <p>User not found</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n  showStreamCard: state.showStreamCard,\r\n  game: state.gameName,\r\n  streamInfo: state.resultStream,\r\n  profileInfo: state.resultProfile\r\n})\r\nexport default connect(mapStateToProps)(BroadcasterCard);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport List from \"./List\";\nimport Search from \"./Search\";\nimport BroadcasterCard from \"./BroadcasterCard\";\nimport { connect } from \"react-redux\";\nimport {\n    getInitialStreams,\n    setInitialStreams,\n    TOGGLECLIPDISPLAY,\n    setClips\n} from \"./actions\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            renderClips: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getInitialStreams());\n    }\n\n    showClips = id => {\n        fetch(\n            \"https://api.twitch.tv/helix/clips?broadcaster_id=\" +\n                id +\n                \"&first=10\",\n            {\n                headers: { \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\" }\n            }\n        )\n            .then(response => response.json())\n            .then(data => {\n                this.props.dispatch(setClips(data));\n                this.props.dispatch(TOGGLECLIPDISPLAY);\n            });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Search />\n                <List showClips={this.showClips}/>\n                <BroadcasterCard />\n            </div>\n        );\n    }\n}\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TEST, TOGGLECLIPDISPLAY, setSearchAction, setProfileInfo, BACKFROMSEARCH} from './actions';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\nconst initialState = {\n\tactiveStreams: [],\n\tshowList: true,\n\trenderClips: false,\n\tsearch: \"\",\n\tgameName: \"\",\n    resultStream: [],\n    resultProfile: [],\n    showStreamCard: false,\n    clips: []\n}\nfunction reducer(state = initialState, action){\n\tswitch(action.type){\n\t\tcase \"SETINITSTREAM\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tactiveStreams: action.streams\n\t\t}\n\n\t\tcase \"TOGGLECLIPDISPLAY\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tshowList: !state.showList,\n\t\t\trenderClips: !state.renderClips\n\t\t}\n\n\t\tcase \"SETSEARCH\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tsearch: action.search\n\t\t}\n\n\t\tcase \"SHOWSEARCHRESULT\":\n\t\treturn {\n\t\t\t...state,\n\t\t\trenderClips: false,\n\t\t\tshowList: false,\n\t\t\tshowStreamCard: true\n\t\t}\n\n\t\tcase \"SETRESULTSTREAM\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tresultStream: action.resultStream\n\t\t}\n\n\t\tcase \"BACKFROMSEARCH\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tshowStreamCard: false,\n\t\t\tshowList: true,\n\t\t    resultStream: [],\n\t\t    resultProfile: [],\n\t\t    gameName: \"\",\n\t\t    search: \"\"\t\t\t\n\t\t}\n\n\t\tcase \"GAMENAME\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tgameName: action.gameName\n\t\t}\n\n\t\tcase \"SETPROFILEINFO\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tresultProfile: action.resultProfile,\n\t\t\tresultStream: [],\n            showStreamCard: true,\n            showList: false,\n            renderClips: false\n\t\t}\n\n\t\tcase \"SETCLIPS\":\n\t\treturn {\n\t\t\t...state,\n\t\t\tclips: action.clips\n\t\t}\n\n\t\tdefault:\n\t\treturn state;\n\t}\n}\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nconst Wrapper = ()=>(\n<Provider store={store}><App/></Provider>\n)\n\nReactDOM.render(<Wrapper />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}