{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","setSearch","event","setState","search","target","value","runSearch","preventDefault","fetch","state","headers","then","response","json","data","length","game_id","gameName","name","showList","showStreamCard","resultStream","resultProfile","renderClips","backFromSearch","showNext","cursorPos","activeStreams","pagination","cursor","showPrev","showClips","id","clips","returnToList","className","Search","propSearch","this","searchString","list","hClick","BroadcasterCard","streamInfo","profileInfo","game","Component","List","props","map","current","index","imgUrl","thumbnail_url","replace","key","href","user_name","src","title","viewer_count","onClick","e","user_id","clipsList","embed_url","height","width","scrolling","allowfullscreen","onSubmit","type","placeholder","onChange","streamDetails","display_name","profile_image_url","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.028217f3.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      activeStreams: {\n        data: []\n      },\n      showList:true,\n      clips:false,\n      search: \"\",\n      showStreamCard: false,\n      renderClips: false,\n      resultStream: [],\n      resultProfile:[],\n      gameName: \"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://api.twitch.tv/helix/streams\", \n    {\n      headers: {\n        \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\n      }\n    }).then(response => response.json())\n    .then(data => {\n      this.setState({activeStreams: data})\n    })\n    }\n\n    setSearch = (event)=>{\n    \tthis.setState({\n    \t\tsearch: event.target.value\n    \t})\n    }\n\n    runSearch = (event)=>{\n    \tevent.preventDefault();\n    \tfetch(\"https://api.twitch.tv/helix/streams?user_login=\"+ this.state.search,\n    \t\t{\n\t\t      headers: {\n\t\t        \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\n\t\t      }\n\t\t    }\n    \t\t)\n    \t.then(response => response.json())\n    \t.then(response => {\n    \t\tif(response.data.length!==0){//stream online\n    \t\t\tfetch(\"https://api.twitch.tv/helix/games?id=\"+response.data[0].game_id,\n    \t\t\t\t{ headers: {\"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"}})\n    \t\t\t.then(response => response.json())\n    \t\t\t.then(response => {\n    \t\t\t\tif(response.data.length){\n    \t\t\t\t\tthis.setState({gameName: response.data[0].name})\n    \t\t\t\t}\n    \t\t\t})\n    \t\t\tthis.setState({showList:false, showStreamCard:true, resultStream: response.data, resultProfile: [], renderClips:false})\n    \t\t}else{//stream offline, get profile instead\n    \tfetch(\"https://api.twitch.tv/helix/users?login=\"+ this.state.search,\n    \t\t{\n\t\t      headers: {\"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"}})\n    \t\t.then(response => response.json())\n    \t\t.then(response => {\n    \t\t\tif(response.data.length===0){\n    \t\t\t\tthis.setState({resultStream:[], resultProfile:[], showStreamCard:true, showList:false, renderClips:false})\n    \t\t\t}else{\n    \t\t\t\tthis.setState({resultProfile: response.data, showStreamCard:true, showList:false, resultStream: [], renderClips:false})\n    \t\t\t}\n    \t\t})\n    \t\t}\n    \t})\n    }\n\n    backFromSearch = (event)=>{\n    \tthis.setState({\n    \t\tshowStreamCard: false,\n    \t\tshowList: true,\n    \t\tresultStream: [],\n    \t\tresultProfile: [],\n    \t\tgameName: \"\",\n    \t\tsearch: \"\"\n    \t})\n    }\n\n    showNext = (event)=>{\n      const cursorPos = this.state.activeStreams.pagination.cursor;\n      fetch(\"https://api.twitch.tv/helix/streams?after=\"+cursorPos, \n    {\n      headers: {\n        \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\n      }\n    }).then(response => response.json())\n    .then(data => {\n      this.setState({activeStreams: data})\n    })\n    }\n\n    showPrev = (event)=>{\n      const cursorPos = this.state.activeStreams.pagination.cursor;\n      fetch(\"https://api.twitch.tv/helix/streams?before=\"+cursorPos, \n    {\n      headers: {\n        \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\n      }\n    }).then(response => response.json())\n    .then(data => {\n      this.setState({activeStreams: data})\n    })\n    }\n\n    showClips = (id)=>{\n      fetch(\"https://api.twitch.tv/helix/clips?broadcaster_id=\"+id+\"&first=10\", \n    {\n      headers: {\n        \"Client-ID\": \"wzdibt6ncymm2c9nquwlpkn9hg58i2\"\n      }\n    }).then(response => response.json())\n    .then(data => {\n      this.setState({clips: data, showList:false, renderClips:true})\n    })  \n    }\n\n    returnToList = ()=>{\n      this.setState({showList:true, renderClips:false})\n    }\n\n     render(){\n    return (\n    <div className=\"App\">\n      <Search propSearch={this.setSearch} searchString={this.state.search} runSearch={this.runSearch}/>\n      <List list={this.state.activeStreams.data} hClick = {this.showNext} showPrev={this.showPrev} showClips={this.showClips} \n        showList={this.state.showList}\n        clips = {this.state.clips}\n        returnToList = {this.returnToList}\n        renderClips = {this.state.renderClips}\n      />\n      <BroadcasterCard showStreamCard={this.state.showStreamCard} streamInfo={this.state.resultStream} profileInfo={this.state.resultProfile}\n      game={this.state.gameName} backFromSearch={this.backFromSearch}/>\n    </div>\n  );\n  }\n\n  }\n\nclass List extends Component{\n  render(){\n    if(this.props.showList){\nconst list = this.props.list.map((current,index)=>{\n      var imgUrl = current.thumbnail_url;\n      imgUrl = imgUrl.replace(\"{width}\", \"480\");\n      imgUrl = imgUrl.replace(\"{height}\", \"270\");\n\n      return(\n          <li key={index}>\n            <a href={\"https://www.twitch.tv/\"+current.user_name} className=\"stream-link\" target=\"blank\"><img src={imgUrl} /></a>\n            <p className=\"title\">{current.title}</p>\n            <p>{current.user_name}</p>\n            <p>{current.viewer_count} viewers</p>\n            <button className=\"nav-button\" onClick={(e)=>{this.props.showClips(current.user_id, e)}} >Top clips</button>\n          </li>\n        )\n    })\n\n    return(\n        <div>\n        <button className=\"nav-button marg1\" onClick={this.props.showPrev}>Previous</button>\n        <button className=\"nav-button marg1\" onClick={this.props.hClick} >Next</button>\n          <ul className=\"streams-list\">{list}</ul>\n        </div>\n      )\n    }else if(this.props.renderClips){//clips\n      const clipsList = this.props.clips.data.map((current,index)=>{\n        return(\n            <li key={index}>\n              <iframe\n                  src={current.embed_url+\"&autoplay=false\"}\n                  height=\"270\"\n                  width=\"480\"\n                  scrolling=\"no\"\n                  allowfullscreen=\"true\">\n              </iframe>\n            </li>\n          )\n      })\n\n      return(\n          <div>\n          <button className=\"nav-button\" onClick={this.props.returnToList} >Back</button>\n          <ul className=\"clips-list\">{clipsList} </ul>\n          </div>\n        )\n    }else{\n    \treturn null;\n    }\n  }\n}\n\nfunction Search(props){\n\treturn(\n\t\t\t<form onSubmit={props.runSearch} className=\"search-form\" >\n\t\t\t\t<input type=\"text\" placeholder=\"Search\" onChange={props.propSearch} value={props.searchString} className=\"search-field\" />\n\t\t\t</form>\n\t\t)\n}\n\nfunction BroadcasterCard(props){\n\n\tif(props.showStreamCard==false){\n\t\treturn null;\n\t}else if(props.streamInfo.length!==0){//stream online\n\t\tconst streamDetails = props.streamInfo[0];\n\t\tvar imgUrl = streamDetails.thumbnail_url;\n\t\timgUrl = imgUrl.replace(\"{width}\", \"640\");\n      imgUrl = imgUrl.replace(\"{height}\", \"360\");\n\t\treturn(\n\t\t\t\t<div className=\"result-stream\" >\n\t\t\t\t\t<button onClick={props.backFromSearch} className=\"nav-button\" >Back</button>\n\t\t\t\t\t<p className=\"nomt\" >{streamDetails.user_name}</p>\n\t\t\t\t\t<a href={\"https://www.twitch.tv/\"+streamDetails.user_name} target=\"blank\" className=\"result-stream-link\" ><img src={imgUrl} /></a>\n\t\t\t\t\t<p>Category: {props.game}</p>\n\t\t\t\t\t<p className=\"title\">{streamDetails.title}</p>\n\t\t\t\t\t<p>{streamDetails.viewer_count} viewers</p>\n\t\t\t\t</div>\n\t\t\t)\n\t}else if(props.profileInfo.length!==0){\n\t\treturn(\n\t\t\t\t<div className=\"result-profile\">\n\t\t\t\t\t<button onClick={props.backFromSearch} className=\"nav-button\" >Back</button>\n\t\t\t\t\t<a href={\"https://www.twitch.tv/\"+props.profileInfo[0].display_name} target=\"blank\">\n\t\t\t\t\t\t<img src={props.profileInfo[0].profile_image_url} />\n\t\t\t\t\t<p>{props.profileInfo[0].display_name}</p>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t)\n\t}else{\n\t\treturn <div><button onClick={props.backFromSearch} className=\"nav-button\" >Back</button><p>User not found</p> </div>\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}